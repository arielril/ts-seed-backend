apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: helm
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: "deployment-${PROJECT_NAMESPACE}-${CI_COMMIT_REF_NAME}-${CI_PROJECT_NAME}"
  name: "${CI_PROJECT_NAME}"
  namespace: "${PROJECT_NAMESPACE}-${CI_COMMIT_REF_NAME}"
  selfLink: "/apis/apps/v1beta2/namespaces/${PROJECT_NAMESPACE}-${CI_COMMIT_REF_NAME}/deployments/${CI_PROJECT_NAME}"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: "deployment-${PROJECT_NAMESPACE}-${CI_COMMIT_REF_NAME}-${CI_PROJECT_NAME}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        app: "${CI_PROJECT_NAME}"
        version: "${APP_VERSION}"
        workload.user.cattle.io/workloadselector: "deployment-${PROJECT_NAMESPACE}-${CI_COMMIT_REF_NAME}-${CI_PROJECT_NAME}"
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: "${CI_PROJECT_NAME}"
            optional: false
        image: "${ECR}/${DOCKER_REPO}/${PROJECT_NAMESPACE}-${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAME}:${APP_VERSION}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
        imagePullPolicy: Always
        name: "${CI_PROJECT_NAME}"
        ports:
        - name: http
          containerPort: ${SERVICEPORT}
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: "${CI_PROJECT_NAME}"
  namespace: "${PROJECT_NAMESPACE}-${CI_COMMIT_REF_NAME}"
  labels:
    app: "${CI_PROJECT_NAME}"
    service: "${CI_PROJECT_NAME}"
spec:
  ports:
  - port: ${SERVICEPORT}
    name: http
  selector:
    app: "${CI_PROJECT_NAME}"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: "${CI_PROJECT_NAME}"
  namespace: "${PROJECT_NAMESPACE}-${CI_COMMIT_REF_NAME}"
spec:
  hosts:
  - "${ISTIO_VIRTUAL_SERVICE}"
  gateways:
  - default-ingress.istio-system
  http:
  - match:
    - uri:
        prefix: "/${CI_PROJECT_NAME}/"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: "${CI_PROJECT_NAME}"
        port:
          number: ${SERVICEPORT}
